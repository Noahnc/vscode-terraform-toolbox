{
  "name": "terraform-toolbox",
  "publisher": "NoahCanadea",
  "displayName": "Terraform Toolbox",
  "repository": {
    "type": "git",
    "url": "https://github.com/Noahnc/vscode-terraform-toolbox"
  },
  "description": "VSCode extension adding a bunch of featurees regarding Terraform and Spacelift.",
  "version": "0.2.3",
  "icon": "Images/terraform_toolbox_icon.png",
  "engines": {
    "vscode": "^1.83.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:terraform",
    "workspaceContains:**/*.tf",
    "workspaceContains:**/*.tfvars"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "tftoolbox.spaceliftLocalPreview",
        "title": "spacelift local-preview (select stack from open project)"
      },
      {
        "command": "tftoolbox.spaceliftLocalPreviewCurrentStack",
        "title": "spacelift local-preview (current stack)"
      },
      {
        "command": "tftoolbox.setTerraformVersion",
        "title": "terraform set version (select from list)"
      },
      {
        "command": "tftoolbox.deleteTerraformVersions",
        "title": "terraform delete versions (select from list)"
      },
      {
        "command": "tftoolbox.autoSetTerraformVersion",
        "title": "terraform set version (from current project requrements)"
      },
      {
        "command": "tftoolbox.initAllProjects",
        "title": "terraform init (all projects)"
      },
      {
        "command": "tftoolbox.initCurrentProject",
        "title": "terraform init (current project)"
      },
      {
        "command": "tftoolbox.initRefreshModules",
        "title": "terraform install missing modules (current project)"
      },
      {
        "command": "tftoolbox.setWorkspace",
        "title": "terraform set workspace (current project)"
      },
      {
        "command": "tftoolbox.autoSetWorkspace",
        "title": "terraform auto set Workspace"
      }
    ],
    "configuration": {
      "title": "terraform-toolbox",
      "properties": {
        "tftoolbox.spacelift.tenantID": {
          "type": "string",
          "default": null,
          "description": "Spacelift tenant id. If not set, the tenant-id from the exported spacectl jwt will be used."
        },
        "tftoolbox.spacelift.profileName": {
          "type": "string",
          "default": null,
          "description": "Spacectl profile name to select when running this extension. The currently active Profile will be used when this is not set."
        },
        "tftoolbox.terraform.autoSelectVersion": {
          "type": "boolean",
          "default": false,
          "description": "When enabled, the extension evaluates the required terraform version for all open projects and selects the latest version matching the requirements."
        },
        "tftoolbox.terraform.autoSelectWorkspace": {
          "type": "boolean",
          "default": true,
          "description": "When true, the terraform workspace will be set for each folder based on the .terraform-toolbox configuration file in the workspace root."
        },
        "tftoolbox.terraform.autoInitAllProjects": {
          "type": "boolean",
          "default": false,
          "description": "If set to true, the extension will run terraform init for all folders in your workspace containing terraform files on startup."
        },
        "tftoolbox.terraform.initArg": {
          "type": "string",
          "default": "-upgrade",
          "description": "Additional args when running any of the terraform init commands. -input=false and -no-color are always added. Multiple args can be specified by separating them with a space."
        },
        "tftoolbox.spacelift.showSpaceliftInitErrorOnStart": {
          "type": "boolean",
          "default": true,
          "description": "Disable startup waring if spacectl is not installed and authenticated."
        },
        "tftoolbox.spacelift.showNoTerraformVersionInstalledMsg": {
          "type": "boolean",
          "default": true,
          "description": "Shows an informtion msg on startup if no terraform version is installed by the extension."
        },
        "tftoolbox.spacelift.stackPendingConfirmationStatusItemUpdateTimeSeconds": {
          "type": "number",
          "default": 30,
          "minimum": 5,
          "maximum": 300,
          "description": "Time in seconds between refreshes of the status bar item showing the amount of Spacelift stacks requireing comfirmation."
        },
        "tftoolbox.excludeGlobPatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".*/**",
            "**/.terraform/**"
          ],
          "description": "List of exclude glob patterns. Files or folders matching these patterns will be ignored by the extension when searching for terraform folders. The default excludes all .terraform folders and folders in the root workspace starting with a dot."
        },
        "tftoolbox.logLevel": {
          "type": "string",
          "enum": [
            "off",
            "fatal",
            "error",
            "warn",
            "info",
            "debug",
            "trace"
          ],
          "default": "info",
          "description": "The verbosity of logging. The Order is off < fatal < error < warn < info < debug < trace.",
          "scope": "window"
        }
      }
    }
  },
  "scripts": {
    "vscode:uninstall": "node ./out/uninstall",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch"
  },
  "devDependencies": {
    "@types/chai": "^4.3.6",
    "@types/decompress": "^4.2.4",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.x",
    "@types/node-fetch": "^2.6.8",
    "@types/vscode": "^1.83.0",
    "@typescript-eslint/eslint-plugin": "^6.7.5",
    "@typescript-eslint/parser": "^6.7.5",
    "@vscode/test-electron": "^2.3.4",
    "depcheck": "^1.4.6",
    "esbuild": "^0.19.2",
    "eslint": "^8.51.0",
    "glob": "^10.3.4",
    "mocha": "^10.2.0",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "@vscode-logging/wrapper": "^1.0.2",
    "axios": "1.5.0",
    "chai": "^4.3.10",
    "decompress": "^4.2.1",
    "graphql-request": "^6.1.0",
    "hcl2-parser": "^1.0.3",
    "jest": "^29.7.0",
    "jwt-decode": "^3.1.2",
    "octokit": "^3.1.0",
    "semver": "^7.5.3",
    "wget-improved": "^3.4.0"
  }
}
