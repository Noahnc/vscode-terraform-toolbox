{
  "name": "terraform-toolbox",
  "publisher": "NoahCanadea",
  "displayName": "Terraform Toolbox",
  "repository": {
    "type": "git",
    "url": "https://github.com/Noahnc/vscode-terraform-toolbox"
  },
  "description": "This extension adds some functionality to VS Code to work with Terraform and Spacelift.",
  "version": "0.1.0",
  "icon": "Images/terraform_toolbox_icon.png",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:terraform",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "tftoolbox.spaceliftLocalPreview",
        "title": "spacelift local-preview (select stack from open project)"
      },
      {
        "command": "tftoolbox.spaceliftLocalPreviewCurrentStack",
        "title": "spacelift local-preview (current stack)"
      },
      {
        "command": "tftoolbox.setTerraformVersion",
        "title": "terraform set version (select from list)"
      },
      {
        "command": "tftoolbox.deleteTerraformVersions",
        "title": "terraform delete versions (select from list)"
      },
      {
        "command": "tftoolbox.autoSetTerraformVersion",
        "title": "terraform set version (from current project requrements)"
      },
      {
        "command": "tftoolbox.initAllProjects",
        "title": "terraform init (all projects)"
      },
      {
        "command": "tftoolbox.initCurrentProject",
        "title": "terraform init (current project)"
      },
      {
        "command": "tftoolbox.initRefreshModules",
        "title": "terraform install missing modules (current project)"
      },
      {
        "command": "tftoolbox.setWorkspace",
        "title": "terraform set workspace (current project)"
      },
      {
        "command": "tftoolbox.autoSetWorkspace",
        "title": "terraform auto set Workspace"
      }
    ],
    "configuration": {
      "title": "terraform-toolbox",
      "properties": {
        "tftoolbox.spacelift.tenantID": {
          "type": "string",
          "default": null,
          "description": "Spacelift tenant id. If not set, the hostname of the spacectl jwt audience will be used."
        },
        "tftoolbox.spacelift.profileName": {
          "type": "string",
          "default": null,
          "description": "Spacectl profile name to select when running this extension. If not set, the default profile will be used."
        },
        "tftoolbox.terraform.autoSelectVersion": {
          "type": "boolean",
          "default": false,
          "description": "When enabled, the extension evaluates the required terraform version for all open projects and selects the latest version matching the requirements."
        },
        "tftoolbox.terraform.autoSelectWorkspace": {
          "type": "boolean",
          "default": true,
          "description": "When true, the terraform workspace will be set for each folder based on the .terraform-toolbox configuration file in the workspace root."
        },
        "tftoolbox.terraform.autoInitAllProjects": {
          "type": "boolean",
          "default": false,
          "description": "If set to true, the extension will run terraform init for all folders in your workspace containing terraform files on startup."
        },
        "tftoolbox.spacelift.showSpaceliftInitErrorOnStart": {
          "type": "boolean",
          "default": true,
          "description": "Disable startup waring if spacectl is not installed and authenticated."
        },
        "tftoolbox.spacelift.stackPendingConfirmationStatusItemUpdateTimeSeconds": {
          "type": "number",
          "default": 30,
          "description": "Time in seconds between refreshes of the status bar item showing the amount of Spacelift stacks requireing comfirmation."
        },
        "tftoolbox.logLevel": {
          "type": "string",
          "enum": [
            "off",
            "fatal",
            "error",
            "warn",
            "info",
            "debug",
            "trace"
          ],
          "default": "info",
          "description": "The verbosity of logging. The Order is off < fatal < error < warn < info < debug < trace.",
          "scope": "window"
        }
      }
    }
  },
  "scripts": {
    "vscode:uninstall": "node ./out/uninstall",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch"
  },
  "devDependencies": {
    "@types/7zip-min": "^1.3.1",
    "@types/chai": "^4.3.5",
    "@types/download": "^8.0.2",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.60.1",
    "@typescript-eslint/parser": "^5.60.1",
    "@vscode/test-electron": "^2.3.4",
    "esbuild": "^0.18.17",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "@vscode-logging/wrapper": "^1.0.2",
    "7zip-min": "^1.4.4",
    "axios": "1.4.0",
    "chai": "^4.3.7",
    "graphql-request": "^6.0.0",
    "hcl2-parser": "^1.0.3",
    "jest": "^29.6.1",
    "jwt-decode": "^3.1.2",
    "octokit": "^2.1.0",
    "semver": "^7.5.3",
    "vscode-languageclient": "^8.1.0"
  }
}
